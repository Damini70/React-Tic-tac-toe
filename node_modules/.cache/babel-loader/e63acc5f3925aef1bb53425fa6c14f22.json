{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANSHU KUMARI\\\\Desktop\\\\React\\\\tic-tac-toe\\\\ti-tac-toe-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Board } from \"./components/Board\";\nimport { ResetButton } from \"./components/ResetButton\";\nimport { ScoreBoard } from \"./components/ScoreBoard\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const WIN_CONDITIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  const [xPlaying, setXPlaying] = useState(true);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [scores, setScores] = useState({\n    xScore: 0,\n    oScore: 0\n  });\n  const [gameOver, setGameOver] = useState(false);\n\n  const handleBoxClick = boxIdx => {\n    // Step 1: Update the board\n    const updatedBoard = board.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    });\n    setBoard(updatedBoard); // Step 2: Check if either player has won the game\n\n    const winner = checkWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"O\") {\n        let {\n          oScore\n        } = scores;\n        oScore += 1;\n        setScores({ ...scores,\n          oScore\n        });\n      } else {\n        let {\n          xScore\n        } = scores;\n        xScore += 1;\n        setScores({ ...scores,\n          xScore\n        });\n      }\n    } // Step 3: Change active player\n\n\n    setXPlaying(!xPlaying);\n  };\n\n  const checkWinner = board => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i]; // Iterate through win conditions and check if either player satisfies them\n\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  };\n\n  const resetBoard = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ScoreBoard, {\n      scores: scores,\n      xPlaying: xPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: board,\n      onClick: gameOver ? resetBoard : handleBoxClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n      resetBoard: resetBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rWElEKVYPntsQAjtIoZWIILpIGM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Board","ResetButton","ScoreBoard","App","WIN_CONDITIONS","xPlaying","setXPlaying","board","setBoard","Array","fill","scores","setScores","xScore","oScore","gameOver","setGameOver","handleBoxClick","boxIdx","updatedBoard","map","value","idx","winner","checkWinner","i","length","x","y","z","resetBoard"],"sources":["C:/Users/ANSHU KUMARI/Desktop/React/tic-tac-toe/ti-tac-toe-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport { Board } from \"./components/Board\";\nimport { ResetButton } from \"./components/ResetButton\";\nimport { ScoreBoard } from \"./components/ScoreBoard\";\nimport './App.css';\n\nconst App = () => {\n\n  const WIN_CONDITIONS = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ]\n\n  const [xPlaying, setXPlaying] = useState(true);\n  const [board, setBoard] = useState(Array(9).fill(null))\n  const [scores, setScores] = useState({ xScore: 0, oScore: 0 })\n  const [gameOver, setGameOver] = useState(false);\n\n  const handleBoxClick = (boxIdx) => {\n    // Step 1: Update the board\n    const updatedBoard = board.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    })\n\n    setBoard(updatedBoard);\n\n    // Step 2: Check if either player has won the game\n    const winner = checkWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"O\") {\n        let { oScore } = scores;\n        oScore += 1;\n        setScores({ ...scores, oScore })\n      } else {\n        let { xScore } = scores;\n        xScore += 1;\n        setScores({ ...scores, xScore })\n      }\n    }\n\n    // Step 3: Change active player\n    setXPlaying(!xPlaying);\n  }\n\n  const checkWinner = (board) => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i];\n\n      // Iterate through win conditions and check if either player satisfies them\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  }\n\n  const resetBoard = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  }\n\n  return (\n    <div className=\"App\">\n      <ScoreBoard scores={scores} xPlaying={xPlaying} />\n      <Board board={board} onClick={gameOver ? resetBoard : handleBoxClick} />\n      <ResetButton resetBoard={resetBoard} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}